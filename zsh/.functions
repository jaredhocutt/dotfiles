#!/usr/bin/env bash

function libvirt-static-ip() {
  if [ $# -ne 3 ]
  then
    echo "Usage: `basename $0` NAME MAC IP"
    return
  fi

  sudo virsh net-update default add ip-dhcp-host "<host mac='$2' name='$1' ip='$3' />" --live --config
}

function pubkey() {
  cat ~/.ssh/id_rsa.pub | xclip -selection clipboard
  cat ~/.ssh/id_rsa.pub
}

function unfuck-audio {
  if [ $# -ne 1 ]
  then
    echo "Usage: `basename $0` DEVICE"
    return
  fi

  INTERVAL=0.1

  case "$1" in
    g35)
      while sleep $INTERVAL
      do
        pacmd set-source-volume alsa_input.usb-Logitech_Logitech_G35_Headset-00.analog-mono 59000
      done
      ;;
    g330)
      while sleep $INTERVAL
      do
        pacmd set-source-volume alsa_input.usb-Logitech_Logitech_G330_Headset-00.analog-mono 59000
      done
      ;;
    builtin)
      while sleep $INTERVAL
      do
        pacmd set-source-volume alsa_input.pci-0000_00_1f.3.analog-stereo 59000
      done
      ;;
    *)
      echo "Usage: `basename $0` {g35|g330|builtin}"
  esac
}

function rm-known-host {
  if [ $# -ne 1 ]
  then
    echo "Usage: `basename $0` HOSTNAME"
    return
  fi

  sed -i "/$1/d" ~/.ssh/known_hosts
}

function ec2-bastion {
  if [ $# -ne 1 ]
  then
    echo "Usage: `basename $0` AWS_PROFILE"
    return
  fi

  export AWS_PROFILE=$1

  BASTION_ID=${EC2_BASTION_ID[$1]}

  echo
  echo "Starting instance..."
  echo
  aws ec2 start-instances --instance-ids ${BASTION_ID}

  echo
  echo "Waiting for instance to start..."
  echo
  aws ec2 wait instance-running --instance-ids ${BASTION_ID}

  BASTION_HOSTNAME=$(aws ec2 describe-instances --instance-ids ${BASTION_ID} --query 'Reservations[].Instances[].PublicDnsName' --output text)

  echo
  echo "Waiting for port 22..."
  echo
  timeout 30 bash -c 'until printf "" 2>>/dev/null >>/dev/tcp/$0/$1; do sleep 1; done' ${BASTION_HOSTNAME} 22

  echo
  echo "Connecting to instance..."
  echo
  ssh -i ${EC2_BASTION_KEY[$1]} ec2-user@${BASTION_HOSTNAME}

}
